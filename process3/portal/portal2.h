/* 
 * 3dyne Legacy Tools GPL Source Code
 * 
 * Copyright (C) 1996-2012 Matthias C. Berger & Simon Berger.
 * 
 * This file is part of the 3dyne Legacy Tools GPL Source Code ("3dyne Legacy
 * Tools Source Code").
 *   
 * 3dyne Legacy Tools Source Code is free software: you can redistribute it
 * and/or modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 * 
 * 3dyne Legacy Tools Source Code is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * 3dyne Legacy Tools Source Code.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * In addition, the 3dyne Legacy Tools Source Code is also subject to certain
 * additional terms. You should have received a copy of these additional terms
 * immediately following the terms and conditions of the GNU General Public
 * License which accompanied the 3dyne Legacy Tools Source Code.
 * 
 * Contributors:
 *     Matthias C. Berger (mcb77@gmx.de) - initial API and implementation
 *     Simon Berger (simberger@gmail.com) - initial API and implementation
 */ 



// portal2.h

#ifndef __portal
#define __portal

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
                                                                                
#include "cmdpars.h"
#include "wire.h"
#include "lib_token.h"
#include "lib_error.h"
#include "lib_math.h"
#include "lib_poly.h"
#include "lib_unique.h"
#include "lib_hobj.h"

#include "../csg/cbspbrush.h"

#include "defs.h"
//#include "type_simple.h"
//#include "type_plane.h"
//#include "type_bspbrush.h"
//#include "type_bspnode.h"


#define		MAX_PLANES	( 4096 )
#define		MAX_NODES	( 32000 )
#define		MAX_PORTALS	( 64000 )
#define		MAX_BRUSHES	( 8000 )

#if 0
// a special kind of bspnode
typedef struct node_s {
	int		plane;

	int		index;
	int		portalnum;
	
	struct node_s	*child[2];
	struct portal_s	*portals;
} node_t;
#endif

typedef enum
{
	NodeType_node = 0,
	NodeType_leaf,
	NodeType_outside
} nodeType;

typedef struct cnode_s {
	hobj_t		*self;

	nodeType	type;

	unsigned int	contents;
	cplane_t		*pl;


//	int		index;

	int		portalnum; // ?
	
	struct cnode_s	*child[2];
	struct portal_s	*portals;
} cnode_t;

typedef struct portal_s {
//	int		index;	// generated by Index_BSP for disk writing ( init = -1 ! )

	hobj_t		*self;

//	plane_t			plane;	// real plane
//	unsigned int			contents;
//	vec3d_t		norm;
//	fp_t		dist;
	cplane_t		*pl;


	// if the portal is the transition between different strong contents
	// this node is the stronger of nodes[]
//	int			stronger;	// after MakePortalContent
	
	polygon_t		*p;

	struct cnode_s		*nodes[2];
	struct portal_s		*next[2];

} portal_t;


#endif
